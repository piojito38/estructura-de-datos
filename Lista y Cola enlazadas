//Eduardo Sebastián Rojas Rivas
#include <iostream>
using namespace std;

#define MAX 5

// ----- Estructura para lista enlazada -----
struct Proceso {
    int id;
    string nombre;
    int prioridad;
    Proceso* siguiente;
};

Proceso* inicio = nullptr;

void insertarProceso(int id, string nombre, int prioridad) {
    Proceso* nuevo = new Proceso{id, nombre, prioridad, nullptr};
    if (inicio == nullptr) {
        inicio = nuevo;
    } else {
        Proceso* actual = inicio;
        while (actual->siguiente != nullptr) {
            actual = actual->siguiente;
        }
        actual->siguiente = nuevo;
    }
}

Proceso* buscarProceso(int id) {
    Proceso* actual = inicio;
    while (actual != nullptr) {
        if (actual->id == id) return actual;
        actual = actual->siguiente;
    }
    return nullptr;
}

// ----- Estructura de la cola -----
struct Nodo {
    int id;
    string proceso;
    int priority;
};

Nodo cola[MAX];
int frente = -1;
int final = -1;

bool estaVacia() {
    return frente == -1;
}

bool estaLlena() {
    return final == MAX - 1;
}

void encolarCPU(Nodo proceso) {
    if (estaLlena()) {
        cout << "La cola del CPU está llena\n";
    } else {
        if (frente == -1) frente = 0;
        final++;
        cola[final] = proceso;
        cout << "Proceso: " << proceso.proceso << " encolado.\n\n";
    }
}

void desencolarCPU() {
    if (estaVacia()) {
        cout << "La cola del CPU está vacía\n";
    } else {
        cout << "Proceso: " << cola[frente].proceso << " desencolado.\n";
        frente++;
        if (frente > final) frente = final = -1;
    }
}

void showCola() {
    if (estaVacia()) {
        cout << "La cola del CPU está vacía.\n";
    } else {
        cout << "Procesos en la cola del CPU:\n";
        for (int i = frente; i <= final; i++) {
            cout << "Proceso: " << cola[i].proceso << "\n";
            cout << "Prioridad: " << cola[i].priority << "\n\n";
        }
    }
}

// ----- Menú de prueba -----
int main() {
    int opcion;
    do {
        cout << "\n=== SISTEMA DE GESTIÓN DE PROCESOS ===\n";
        cout << "1. Insertar proceso a lista\n";
        cout << "2. Encolar proceso a CPU\n";
        cout << "3. Desencolar proceso del CPU\n";
        cout << "4. Mostrar cola del CPU\n";
        cout << "5. Salir\n";
        cout << "Seleccione una opción: ";
        cin >> opcion;

        if (opcion == 1) {
            int id, prioridad;
            string nombre;
            cout << "ID del proceso: ";
            cin >> id;
            cout << "Nombre del proceso: ";
            cin >> nombre;
            cout << "Prioridad: ";
            cin >> prioridad;
            insertarProceso(id, nombre, prioridad);
            cout << "Proceso insertado en la lista.\n";
        }

        else if (opcion == 2) {
            int id;
            cout << "ID del proceso a encolar: ";
            cin >> id;
            Proceso* p = buscarProceso(id);
            if (p != nullptr) {
                Nodo nuevo = {p->id, p->nombre, p->prioridad};
                encolarCPU(nuevo);
            } else {
                cout << "Proceso no encontrado en la lista.\n";
            }
        }

        else if (opcion == 3) {
            desencolarCPU();
        }

        else if (opcion == 4) {
            showCola();
        }

        else if (opcion == 5) {
            cout << "Saliendo...\n";
        }

        else {
            cout << "Opción no válida.\n";
        }

    } while (opcion != 5);

    return 0;
}
